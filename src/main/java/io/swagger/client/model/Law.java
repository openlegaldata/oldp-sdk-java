/*
 * Open Legal Data API
 * With the Open Legal Data API you can access various data from the legal domain, e.g. law text or case files. The data may be used for semantic analysis or to create statistics. For more information visit our website. https://openlegaldata.io/
 *
 * OpenAPI spec version: v1
 * Contact: hello@openlegaldata.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Law
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-18T15:11:46.584Z")
public class Law {
  @SerializedName("book")
  private Integer book = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("content")
  private String content = null;

  @SerializedName("slug")
  private String slug = null;

  public Law book(Integer book) {
    this.book = book;
    return this;
  }

   /**
   * The book this law belongs to
   * @return book
  **/
  @ApiModelProperty(required = true, value = "The book this law belongs to")
  public Integer getBook() {
    return book;
  }

  public void setBook(Integer book) {
    this.book = book;
  }

  public Law title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Verbose title of law
   * @return title
  **/
  @ApiModelProperty(value = "Verbose title of law")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Law content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Law content with HTML tags and reference markers (managed by CKEditor)
   * @return content
  **/
  @ApiModelProperty(value = "Law content with HTML tags and reference markers (managed by CKEditor)")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public Law slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Slug based on section
   * @return slug
  **/
  @ApiModelProperty(required = true, value = "Slug based on section")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Law law = (Law) o;
    return Objects.equals(this.book, law.book) &&
        Objects.equals(this.title, law.title) &&
        Objects.equals(this.content, law.content) &&
        Objects.equals(this.slug, law.slug);
  }

  @Override
  public int hashCode() {
    return Objects.hash(book, title, content, slug);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Law {\n");
    
    sb.append("    book: ").append(toIndentedString(book)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


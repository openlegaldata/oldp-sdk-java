/*
 * Open Legal Data API
 * With the Open Legal Data API you can access various data from the legal domain, e.g. law text or case files. The data may be used for semantic analysis or to create statistics. For more information visit our website. https://openlegaldata.io/
 *
 * OpenAPI spec version: v1
 * Contact: hello@openlegaldata.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CourtMinimal;
import java.io.IOException;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * ModelCase
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-18T15:11:46.584Z")
public class ModelCase {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("court")
  private CourtMinimal court = null;

  @SerializedName("file_number")
  private String fileNumber = null;

  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("created_date")
  private OffsetDateTime createdDate = null;

  @SerializedName("updated_date")
  private OffsetDateTime updatedDate = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("ecli")
  private String ecli = null;

  @SerializedName("content")
  private String content = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get slug
   * @return slug
  **/
  @ApiModelProperty(value = "")
  public String getSlug() {
    return slug;
  }

  public ModelCase court(CourtMinimal court) {
    this.court = court;
    return this;
  }

   /**
   * Get court
   * @return court
  **/
  @ApiModelProperty(value = "")
  public CourtMinimal getCourt() {
    return court;
  }

  public void setCourt(CourtMinimal court) {
    this.court = court;
  }

  public ModelCase fileNumber(String fileNumber) {
    this.fileNumber = fileNumber;
    return this;
  }

   /**
   * File number as defined by court
   * @return fileNumber
  **/
  @ApiModelProperty(required = true, value = "File number as defined by court")
  public String getFileNumber() {
    return fileNumber;
  }

  public void setFileNumber(String fileNumber) {
    this.fileNumber = fileNumber;
  }

  public ModelCase date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Publication date as in source
   * @return date
  **/
  @ApiModelProperty(value = "Publication date as in source")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

   /**
   * Entry is created at this date time
   * @return createdDate
  **/
  @ApiModelProperty(value = "Entry is created at this date time")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

   /**
   * Date time of last change
   * @return updatedDate
  **/
  @ApiModelProperty(value = "Date time of last change")
  public OffsetDateTime getUpdatedDate() {
    return updatedDate;
  }

  public ModelCase type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of decision (Urteil, Beschluss, ...)
   * @return type
  **/
  @ApiModelProperty(value = "Type of decision (Urteil, Beschluss, ...)")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ModelCase ecli(String ecli) {
    this.ecli = ecli;
    return this;
  }

   /**
   * European Case Law Identifier
   * @return ecli
  **/
  @ApiModelProperty(value = "European Case Law Identifier")
  public String getEcli() {
    return ecli;
  }

  public void setEcli(String ecli) {
    this.ecli = ecli;
  }

  public ModelCase content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Case full-text formatted in Legal HTML
   * @return content
  **/
  @ApiModelProperty(required = true, value = "Case full-text formatted in Legal HTML")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelCase _case = (ModelCase) o;
    return Objects.equals(this.id, _case.id) &&
        Objects.equals(this.slug, _case.slug) &&
        Objects.equals(this.court, _case.court) &&
        Objects.equals(this.fileNumber, _case.fileNumber) &&
        Objects.equals(this.date, _case.date) &&
        Objects.equals(this.createdDate, _case.createdDate) &&
        Objects.equals(this.updatedDate, _case.updatedDate) &&
        Objects.equals(this.type, _case.type) &&
        Objects.equals(this.ecli, _case.ecli) &&
        Objects.equals(this.content, _case.content);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, slug, court, fileNumber, date, createdDate, updatedDate, type, ecli, content);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelCase {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    court: ").append(toIndentedString(court)).append("\n");
    sb.append("    fileNumber: ").append(toIndentedString(fileNumber)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    updatedDate: ").append(toIndentedString(updatedDate)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    ecli: ").append(toIndentedString(ecli)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


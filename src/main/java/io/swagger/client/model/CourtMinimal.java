/*
 * Open Legal Data API
 * With the Open Legal Data API you can access various data from the legal domain, e.g. law text or case files. The data may be used for semantic analysis or to create statistics. For more information visit our website. https://openlegaldata.io/
 *
 * OpenAPI spec version: v1
 * Contact: hello@openlegaldata.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CourtMinimal
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-18T15:11:46.584Z")
public class CourtMinimal {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("city")
  private Integer city = null;

  @SerializedName("state")
  private Integer state = null;

  @SerializedName("jurisdiction")
  private String jurisdiction = null;

  @SerializedName("level_of_appeal")
  private String levelOfAppeal = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public CourtMinimal name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Full name of the court with location
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Full name of the court with location")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CourtMinimal slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Type &amp; city name as lowercase
   * @return slug
  **/
  @ApiModelProperty(required = true, value = "Type & city name as lowercase")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public CourtMinimal city(Integer city) {
    this.city = city;
    return this;
  }

   /**
   * Court belongs to this city, if null court is state-level
   * @return city
  **/
  @ApiModelProperty(value = "Court belongs to this city, if null court is state-level")
  public Integer getCity() {
    return city;
  }

  public void setCity(Integer city) {
    this.city = city;
  }

  public CourtMinimal state(Integer state) {
    this.state = state;
    return this;
  }

   /**
   * Court belongs to this state (derive country of this field)
   * @return state
  **/
  @ApiModelProperty(required = true, value = "Court belongs to this state (derive country of this field)")
  public Integer getState() {
    return state;
  }

  public void setState(Integer state) {
    this.state = state;
  }

  public CourtMinimal jurisdiction(String jurisdiction) {
    this.jurisdiction = jurisdiction;
    return this;
  }

   /**
   * Jurisdiction of court (ordinary, civil, ...)
   * @return jurisdiction
  **/
  @ApiModelProperty(value = "Jurisdiction of court (ordinary, civil, ...)")
  public String getJurisdiction() {
    return jurisdiction;
  }

  public void setJurisdiction(String jurisdiction) {
    this.jurisdiction = jurisdiction;
  }

  public CourtMinimal levelOfAppeal(String levelOfAppeal) {
    this.levelOfAppeal = levelOfAppeal;
    return this;
  }

   /**
   * Subject-matter jurisdiction (local, federal, high court, ...)
   * @return levelOfAppeal
  **/
  @ApiModelProperty(value = "Subject-matter jurisdiction (local, federal, high court, ...)")
  public String getLevelOfAppeal() {
    return levelOfAppeal;
  }

  public void setLevelOfAppeal(String levelOfAppeal) {
    this.levelOfAppeal = levelOfAppeal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CourtMinimal courtMinimal = (CourtMinimal) o;
    return Objects.equals(this.id, courtMinimal.id) &&
        Objects.equals(this.name, courtMinimal.name) &&
        Objects.equals(this.slug, courtMinimal.slug) &&
        Objects.equals(this.city, courtMinimal.city) &&
        Objects.equals(this.state, courtMinimal.state) &&
        Objects.equals(this.jurisdiction, courtMinimal.jurisdiction) &&
        Objects.equals(this.levelOfAppeal, courtMinimal.levelOfAppeal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, slug, city, state, jurisdiction, levelOfAppeal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CourtMinimal {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    jurisdiction: ").append(toIndentedString(jurisdiction)).append("\n");
    sb.append("    levelOfAppeal: ").append(toIndentedString(levelOfAppeal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


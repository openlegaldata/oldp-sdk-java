/*
 * Open Legal Data API
 * With the Open Legal Data API you can access various data from the legal domain, e.g. law text or case files. The data may be used for semantic analysis or to create statistics. For more information visit our website. https://openlegaldata.io/
 *
 * OpenAPI spec version: v1
 * Contact: hello@openlegaldata.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import java.math.BigDecimal;
import io.swagger.client.model.InlineResponse2003;
import io.swagger.client.model.InlineResponse2004;
import io.swagger.client.model.ModelCase;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CasesApi
 */
@Ignore
public class CasesApiTest {

    private final CasesApi api = new CasesApi();

    
    /**
     * 
     *
     * List view for cases
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void casesCreateTest() throws ApiException {
        ModelCase data = null;
        ModelCase response = api.casesCreate(data);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * List view for cases
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void casesDeleteTest() throws ApiException {
        Integer id = null;
        api.casesDelete(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * List view for cases
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void casesListTest() throws ApiException {
        String ordering = null;
        String date = null;
        String slug = null;
        String fileNumber = null;
        String ecli = null;
        BigDecimal court = null;
        String courtSlug = null;
        String courtJurisdiction = null;
        String courtLevelOfAppeal = null;
        String courtState = null;
        Integer page = null;
        Integer pageSize = null;
        InlineResponse2003 response = api.casesList(ordering, date, slug, fileNumber, ecli, court, courtSlug, courtJurisdiction, courtLevelOfAppeal, courtState, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * List view for cases
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void casesPartialUpdateTest() throws ApiException {
        Integer id = null;
        ModelCase data = null;
        ModelCase response = api.casesPartialUpdate(id, data);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * List view for cases
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void casesReadTest() throws ApiException {
        Integer id = null;
        ModelCase response = api.casesRead(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Search view (list only)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void casesSearchListTest() throws ApiException {
        String text = null;
        String facetModelName = null;
        String date = null;
        String courtJurisdiction = null;
        String courtLevelOfAppeal = null;
        String decisionType = null;
        String court = null;
        Integer page = null;
        Integer pageSize = null;
        InlineResponse2004 response = api.casesSearchList(text, facetModelName, date, courtJurisdiction, courtLevelOfAppeal, decisionType, court, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * List view for cases
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void casesUpdateTest() throws ApiException {
        Integer id = null;
        ModelCase data = null;
        ModelCase response = api.casesUpdate(id, data);

        // TODO: test validations
    }
    
}

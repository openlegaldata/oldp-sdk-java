/*
 * Open Legal Data API
 * With the Open Legal Data API you can access various data from the legal domain, e.g. law text or case files. The data may be used for semantic analysis or to create statistics. For more information visit our website. https://openlegaldata.io/
 *
 * OpenAPI spec version: v1
 * Contact: hello@openlegaldata.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.InlineResponse20010;
import io.swagger.client.model.InlineResponse2009;
import io.swagger.client.model.Law;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LawsApi
 */
@Ignore
public class LawsApiTest {

    private final LawsApi api = new LawsApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void lawsCreateTest() throws ApiException {
        Law data = null;
        Law response = api.lawsCreate(data);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void lawsDeleteTest() throws ApiException {
        Integer id = null;
        api.lawsDelete(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void lawsListTest() throws ApiException {
        String bookId = null;
        String bookLatest = null;
        String bookRevisionDate = null;
        Integer limit = null;
        Integer offset = null;
        InlineResponse2009 response = api.lawsList(bookId, bookLatest, bookRevisionDate, limit, offset);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void lawsPartialUpdateTest() throws ApiException {
        Integer id = null;
        Law data = null;
        Law response = api.lawsPartialUpdate(id, data);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void lawsReadTest() throws ApiException {
        Integer id = null;
        Law response = api.lawsRead(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Search view
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void lawsSearchListTest() throws ApiException {
        String text = null;
        String facetModelName = null;
        String bookCode = null;
        Integer page = null;
        Integer pageSize = null;
        InlineResponse20010 response = api.lawsSearchList(text, facetModelName, bookCode, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void lawsUpdateTest() throws ApiException {
        Integer id = null;
        Law data = null;
        Law response = api.lawsUpdate(id, data);

        // TODO: test validations
    }
    
}

/*
 * Open Legal Data API
 * With the Open Legal Data API you can access various data from the legal domain, e.g. law text or case files. The data may be used for semantic analysis or to create statistics. For more information visit our website. https://openlegaldata.io/
 *
 * OpenAPI spec version: v1
 * Contact: hello@openlegaldata.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AnnotationLabel;
import java.math.BigDecimal;
import io.swagger.client.model.InlineResponse200;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AnnotationLabelsApi
 */
@Ignore
public class AnnotationLabelsApiTest {

    private final AnnotationLabelsApi api = new AnnotationLabelsApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annotationLabelsCreateTest() throws ApiException {
        AnnotationLabel data = null;
        AnnotationLabel response = api.annotationLabelsCreate(data);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annotationLabelsDeleteTest() throws ApiException {
        Integer id = null;
        api.annotationLabelsDelete(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annotationLabelsListTest() throws ApiException {
        String ordering = null;
        BigDecimal owner = null;
        String slug = null;
        String _private = null;
        String trusted = null;
        Integer limit = null;
        Integer offset = null;
        InlineResponse200 response = api.annotationLabelsList(ordering, owner, slug, _private, trusted, limit, offset);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annotationLabelsPartialUpdateTest() throws ApiException {
        Integer id = null;
        AnnotationLabel data = null;
        AnnotationLabel response = api.annotationLabelsPartialUpdate(id, data);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annotationLabelsReadTest() throws ApiException {
        Integer id = null;
        AnnotationLabel response = api.annotationLabelsRead(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void annotationLabelsUpdateTest() throws ApiException {
        Integer id = null;
        AnnotationLabel data = null;
        AnnotationLabel response = api.annotationLabelsUpdate(id, data);

        // TODO: test validations
    }
    
}
